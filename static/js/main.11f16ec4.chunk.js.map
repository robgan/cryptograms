{"version":3,"sources":["Bio.js","App.js","reportWebVitals.js","index.js"],"names":["Bio","author","React","useState","bio","setBio","a","fetch","split","join","response","json","statusCode","statusMessage","ok","Error","console","error","content","useEffect","updateBio","className","extract","generateRandomLetter","alphabet","Math","floor","random","length","localStorage","getItem","document","body","classList","add","App","words","data","setData","updateQuote","frequency","quote","freq","i","character","charAt","getFrequency","toLowerCase","scrambled","usedLetters","letter","newLetter","includes","scrambleMap","wordArr","word","j","RegExp","test","maxLength","onKeyUp","triggerTab","toUpperCase","id","event","reset","textareaList","getElementsByTagName","value","getElementById","style","display","help","x","onClick","btn","querySelector","addEventListener","toggle","theme","contains","setItem","userAnswer","answer","replace","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.11f16ec4.chunk.js","sourcesContent":["import \"./Bio.css\"\r\nimport React from \"react\";\r\n\r\nfunction Bio(author) {\r\n    const [bio, setBio] = React.useState(null);\r\n\r\n    async function updateBio() {\r\n        try {\r\n            const response = await fetch(\"https://en.wikipedia.org/api/rest_v1/page/summary/\" + author.author.split(\" \").join(\"_\"));\r\n            const {statusCode, statusMessage, ...bio} = await response.json();\r\n            if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\r\n            setBio(bio);\r\n        } catch (error) {\r\n            // If the API request failed, log the error to console and update state\r\n            // so that the error will be reflected in the UI.\r\n            console.error(error);\r\n            setBio({content: \"Oops... Something went wrong\"});\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        updateBio();\r\n    }, [author]);\r\n\r\n    if (!bio) return null;\r\n\r\n    return (\r\n        <div className={\"description\"}>\r\n            <p>{\"Quote by \" + author.author}</p>\r\n            <p className={\"biography\"}>{bio.extract}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio","import './App.css';\nimport Bio from \"./Bio\"\nimport React from \"react\"\n\nconst currentTheme = localStorage.getItem(\"theme\");\nif (currentTheme === \"dark\") {\n    document.body.classList.add(\"dark-theme\");\n}\n\nfunction generateRandomLetter() {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    return alphabet[Math.floor(Math.random() * alphabet.length)]\n}\n\nfunction scrambleMap() {\n    let scrambled = {\n        \"a\": \"a\",\n        \"b\": \"b\",\n        \"c\": \"c\",\n        \"d\": \"d\",\n        \"e\": \"e\",\n        \"f\": \"f\",\n        \"g\": \"g\",\n        \"h\": \"h\",\n        \"i\": \"i\",\n        \"j\": \"j\",\n        \"k\": \"k\",\n        \"l\": \"l\",\n        \"m\": \"m\",\n        \"n\": \"n\",\n        \"o\": \"o\",\n        \"p\": \"p\",\n        \"q\": \"q\",\n        \"r\": \"r\",\n        \"s\": \"s\",\n        \"t\": \"t\",\n        \"u\": \"u\",\n        \"v\": \"v\",\n        \"w\": \"w\",\n        \"x\": \"x\",\n        \"y\": \"y\",\n        \"z\": \"z\",\n    };\n    let usedLetters = \"\";\n    for (const letter in scrambled) {\n        let newLetter = generateRandomLetter();\n        while (usedLetters.includes(newLetter) || newLetter === letter) {\n            newLetter = generateRandomLetter()\n        }\n        usedLetters = usedLetters + newLetter\n        scrambled[letter] = newLetter\n    }\n    return scrambled;\n}\n\nfunction getFrequency(quote) {\n    let freq = {};\n    for (let i = 0; i < quote.length; i++) {\n        const character = quote.charAt(i);\n        if (freq[character]) {\n            freq[character]++;\n        } else {\n            freq[character] = 1;\n        }\n    }\n    return freq;\n}\n\nfunction App() {\n    let words = [];\n\n    const [data, setData] = React.useState(null)\n\n    async function updateQuote() {\n        try {\n            const response = await fetch(\"https://api.quotable.io/random\");\n            const {statusCode, statusMessage, ...data} = await response.json();\n            if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\n            setData(data);\n        } catch (error) {\n            // If the API request failed, log the error to console and update state\n            // so that the error will be reflected in the UI.\n            console.error(error);\n            setData({content: \"Oops... Something went wrong\"});\n        }\n    }\n\n    // Run `updateQuote` once when component mounts\n    React.useEffect(() => {\n        updateQuote();\n    }, []);\n\n    if (!data) return null;\n\n    let frequency = getFrequency(data.content.toLowerCase())\n    let scrambled = scrambleMap()\n\n    let wordArr = data.content.split(\" \");\n    for (let i = 0; i < wordArr.length; i++) {\n        let word = [];\n        for (let j = 0; j < wordArr[i].length; j++) {\n            let regex = new RegExp(/[a-zA-Z]/);\n            if (regex.test(data.content.split(\" \")[i][j])) {\n                word[j] = <div className={\"quoteBlock\"} key={j}>\n                    <textarea maxLength={1} className={\"quoteText\"} onKeyUp={triggerTab}/>\n                    <p className={\"scrambledText\"}>{scrambled[wordArr[i][j].toLowerCase()].toUpperCase()}</p>\n                    <p className={\"letterCount\"}>{frequency[wordArr[i][j].toLowerCase()]}</p>\n                </div>\n            } else {\n                word[j] = <div className={\"quotePunct\"} key={j}>\n                    <textarea maxLength={1} className={\"punct\"}/>\n                    <p>{wordArr[i][j]}</p>\n                    <p className={\"punct\"}>blank</p>\n                </div>\n            }\n        }\n        words[i] = <div className={\"word\"} id={i} key={i}>\n            {word}\n        </div>;\n    }\n\n    function triggerTab(event) {\n        // //Note that this doesn't honour tab-indexes\n        //\n        // event.preventDefault();\n        //\n        // //Isolate the node that we're after\n        // const currentNode = event.target;\n        //\n        // //find all tab-able elements\n        // const allElements = document.querySelectorAll(\"textarea\");\n        //\n        // //Find the current tab index.\n        // const currentIndex = Array.prototype.findIndex.call(allElements, el => currentNode.isEqualNode(el))        // const currentIndex = allElements.get(allElements.index(document.activeElement) + 1)\n        // console.log(currentIndex)\n        // console.log(document.activeElement)\n        //\n        // //focus the following element\n        // const targetIndex = (currentIndex + 1) % allElements.length;\n        // allElements[targetIndex].focus();\n    }\n\n    function checkAnswer() {\n        let userAnswer = \"\";\n        let answer = data.content.replace(/[^\\w\\s]|_/g, \"\")\n            .replace(/\\s+/g, \"\").toLowerCase();\n        let textareaList = document.getElementsByTagName(\"textarea\");\n        for (let i = 0; i < textareaList.length; i++) {\n            userAnswer += textareaList[i].value\n        }\n        console.log(userAnswer)\n        if (userAnswer === answer) {\n            let x = document.getElementById(\"tryAgain\");\n            x.style.display = \"none\";\n\n            let y = document.getElementById(\"congratulations\");\n            y.style.display = \"block\";\n        } else {\n            let x = document.getElementById(\"tryAgain\");\n            x.style.display = \"block\";\n\n            let y = document.getElementById(\"congratulations\");\n            y.style.display = \"none\";\n        }\n    }\n\n    function reset() {\n        let textareaList = document.getElementsByTagName(\"textarea\");\n        for (let i = 0; i < textareaList.length; i++) {\n            textareaList[i].value = \"\";\n        }\n        let x = document.getElementById(\"tryAgain\");\n        x.style.display = \"none\";\n\n        let y = document.getElementById(\"congratulations\");\n        y.style.display = \"none\";\n    }\n\n    function help() {\n        let x = document.getElementById(\"help\");\n        if (x.style.display === \"none\") {\n            x.style.display = \"block\";\n        } else {\n            x.style.display = \"none\";\n        }\n    }\n\n    function toggleMode() {\n        const btn = document.querySelector(\".btn-toggle\");\n\n        const currentTheme = localStorage.getItem(\"theme\");\n        if (currentTheme === \"dark\") {\n            document.body.classList.add(\"dark-theme\");\n        }\n\n        btn.addEventListener(\"click\", function () {\n            document.body.classList.toggle(\"dark-theme\");\n\n            let theme = \"light\";\n            if (document.body.classList.contains(\"dark-theme\")) {\n                theme = \"dark\";\n            }\n            localStorage.setItem(\"theme\", theme);\n        });\n    }\n\n    return (\n        <div className={\"cryptograms\"}>\n            <div className={\"header\"}>\n                <h1> Cryptograms</h1>\n                <div className={\"help-button\"}>\n                    <button onClick={help}>Help</button>\n                    <button className=\"btn-toggle\" onClick={toggleMode}>Toggle Theme</button>\n                </div>\n            </div>\n            <div id={\"help\"} style={{display: \"none\"}}>\n                <p className={help}>Welcome to Cryptograms, a cryptography game where a secret message has been encoded\n                    with a monoalphabetic substitution cipher.\n                    This means that every letter has been changed to a different letter. For example, every \"a\" could\n                    have been transformed into a \"j\".\n                    A letter cannot be transformed into itself. Good luck and happy decoding!</p>\n            </div>\n            <Bio author={data.author}/>\n            <div className={\"quote\"} id={\"quote\"}>{words}</div>\n            {/*<p>{data.content + \" -\" + data.author}</p>*/}\n            <div>\n                <p id={\"tryAgain\"} style={{display: \"none\"}}>Something was incorrect. Try Again</p>\n                <div id={\"congratulations\"} style={{display: \"none\"}}>\n                    <p>Congratulations! You deciphered the code</p>\n                    {/*<button onClick={postToTwitter}>Post to Twitter</button>*/}\n                </div>\n            </div>\n            <div className={\"multi-button\"}>\n                <button className={\"checkAnswer\"} onClick={checkAnswer}>Check Answer</button>\n                <button className={\"reset\"} onClick={reset}>Reset</button>\n                <button className={\"newPuzzle\"} onClick={function (event) {\n                    updateQuote();\n                    reset()\n                }}>New Puzzle\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import Header from \"./Header\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}